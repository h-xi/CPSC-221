Spanning Tree: 

Given G = (V, E), a spanning tree of G is a connected subgraph of G with exactly |V| -1 edges
    - A minimal subset of edges that connect all ther vertices of G (weighted)

Output a graph G' = (V, E') with the following characteristics: 
    - G' is a spanning subgraph of G 
    - G' is connected and acyclic (i.e a tree)
    - The sum of the edge weights of E' is minimal among all such spanning trees 


Practical Example: 

Install power lines in city to supply all the residential/commercial/etc. districts 
    - Costs $x/unit distance to construct power lines --> minimize cost


Kruskal's Algorithm: 

Build a spanning tree from several connected componenets 

    - Repeatedly choose the minimum weight edge joining two connected components, 
      which does not form a cycle, until edge set has |V| - 1 edges 

      {
          set E' = empty 
          while (|E'| != |V| - 1 )
          {
              Find the minimum weight edge e' such that E' does not contain 
              cycles --> add e to E' 
          }
      }

How to find minimum weight edge? --> Priority Queue! 

Unions and check if it contains cycles? --> Disjoint set! 

1) Add edges + weight into priority queue. 
2) Set every edge as its own uptree 
3) Choose a minimum weight that does not form a cycle (eg. if not in same set) --> combine set

Run Time: n = vertices, m = edges 

Priority Queue: 
    - (Heap) Build --> Theta(m)
    - (Ordered Array) --> MergeSort = m*log(m)

RemoveMin: 
    - (Heap) --> Theta(m * log(m)), m = # of removeMin, log(m) = removeMin
    - (Ordered Array) --> Theta(m)

Overall Cost: Theta(m * log(m)) 

Prim's Algorithm: 

- Based on Partition Property in graph
- Builds a spaning tree from intially one vertex 
- Repeatedly choose a minimum-weight edge from a vertex in the tree, to a vertex outside the tree
    - Adds that vertex to tree 

- Unlike Kruskla's algorithm --> Intersperse insertion and removal operations 

- Maximum number of insertions into Priority Queue: 
    - Assuming heap implementatin of PQ 
    - |E| is the worst case, then total cost of all insertions O(|E|log|E|)

Run Time : O(m*log(n))

NOTE: 

A graph may have multiple minimum spanning trees s.t they have different sets of edges 

HOWEVER --> ALL will have the same edge weight 

